@inject IShoppingCartService shoppingCartService
@implements IDisposable

<div class="top-row p-0 my-1 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href=""><span class="fas fa-shopping-cart" aria-hidden="true"></span>&nbsp;ShopOnline</a>
          
        <AuthorizeView>
                <Authorized>
                    <b class="navbar-text mx-2 d-md-none" style="color: white">Welcome @context.User.Identity.Name&nbsp;</b>             
                </Authorized>
            </AuthorizeView>
 
        
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass">
    <nav class="flex-column">

        <div class="nav-item p-0 d-md-none">
            <div class="d-flex flex-row ">
                <SearchMenu/>
                <LoginLogoutButton/>
            </div>
        </div>

        <div class="nav-item px-3" @onclick="ToggleNavMenu">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="fas fa-home" aria-hidden="true"></span>&nbsp;Home
            </NavLink>
        </div>
        <ProductCategoriesNavMenu OnCategorySelected="ToggleNavMenu"/>
    
  


        <div class="nav-item px-3 d-sm-none" @onclick="ToggleNavMenu">
            <NavLink class="nav-link" href="ShoppingCart">
                <span class="fas fa-shopping-cart" aria-hidden="true"></span>&nbsp;Shopping Cart (<b>@shoppingCartItemCount</b>)
            </NavLink>
        </div>


    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int shoppingCartItemCount = 0;

    protected override void OnInitialized()
    {
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

     protected void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}
